{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isAuthenticated: false,\n  user: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = !!action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    }\n  }\n});\nexport const {\n  setUser,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","authSlice","name","reducers","setUser","state","action","payload","logout","actions","reducer"],"sources":["/Users/tancong/Code/department-platform/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  user: {\n    id: string;\n    username: string;\n    email: string;\n  } | null;\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<AuthState['user']>) => {\n      state.user = action.payload;\n      state.isAuthenticated = !!action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.isAuthenticated = false;\n    },\n  },\n});\n\nexport const { setUser, logout } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAwC,KAAK;MAC5DD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,eAAe,GAAG,CAAC,CAACO,MAAM,CAACC,OAAO;IAC1C,CAAC;IACDC,MAAM,EAAGH,KAAK,IAAK;MACjBA,KAAK,CAACL,IAAI,GAAG,IAAI;MACjBK,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,OAAO;EAAEI;AAAO,CAAC,GAAGP,SAAS,CAACQ,OAAO;AACpD,eAAeR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}