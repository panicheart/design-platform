{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\n\n// Resource API\nexport const resourceAPI = {\n  getAll: params => api.get('/resources', {\n    params\n  }),\n  getById: id => api.get(`/resources/${id}`),\n  create: data => api.post('/resources', data),\n  update: (id, data) => api.put(`/resources/${id}`, data),\n  delete: id => api.delete(`/resources/${id}`)\n};\n\n// Task API\nexport const taskAPI = {\n  getAll: params => api.get('/tasks', {\n    params\n  }),\n  getById: id => api.get(`/tasks/${id}`),\n  create: data => api.post('/tasks', data),\n  update: (id, data) => api.put(`/tasks/${id}`, data),\n  delete: id => api.delete(`/tasks/${id}`),\n  addComment: (id, content) => api.post(`/tasks/${id}/comments`, {\n    content\n  }),\n  updateProgress: (id, progress) => api.patch(`/tasks/${id}/progress`, {\n    progress\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","credentials","post","register","userData","resourceAPI","getAll","params","get","getById","id","data","update","put","delete","taskAPI","addComment","content","updateProgress","progress","patch"],"sources":["/Users/tancong/Code/department-platform/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const authAPI = {\n  login: (credentials: { email: string; password: string }) =>\n    api.post('/auth/login', credentials),\n  register: (userData: {\n    username: string;\n    email: string;\n    password: string;\n    department: string;\n    position: string;\n  }) => api.post('/auth/register', userData),\n};\n\n// Resource API\nexport const resourceAPI = {\n  getAll: (params?: { type?: string; status?: string; visibility?: string }) =>\n    api.get('/resources', { params }),\n  getById: (id: string) => api.get(`/resources/${id}`),\n  create: (data: any) => api.post('/resources', data),\n  update: (id: string, data: any) => api.put(`/resources/${id}`, data),\n  delete: (id: string) => api.delete(`/resources/${id}`),\n};\n\n// Task API\nexport const taskAPI = {\n  getAll: (params?: { type?: string; status?: string; assignedTo?: string }) =>\n    api.get('/tasks', { params }),\n  getById: (id: string) => api.get(`/tasks/${id}`),\n  create: (data: any) => api.post('/tasks', data),\n  update: (id: string, data: any) => api.put(`/tasks/${id}`, data),\n  delete: (id: string) => api.delete(`/tasks/${id}`),\n  addComment: (id: string, content: string) =>\n    api.post(`/tasks/${id}/comments`, { content }),\n  updateProgress: (id: string, progress: number) =>\n    api.patch(`/tasks/${id}/progress`, { progress }),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAgD,IACtDd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EACtCE,QAAQ,EAAGC,QAMV,IAAKjB,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEE,QAAQ;AAC3C,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,MAAM,EAAGC,MAAgE,IACvEpB,GAAG,CAACqB,GAAG,CAAC,YAAY,EAAE;IAAED;EAAO,CAAC,CAAC;EACnCE,OAAO,EAAGC,EAAU,IAAKvB,GAAG,CAACqB,GAAG,CAAC,cAAcE,EAAE,EAAE,CAAC;EACpDtB,MAAM,EAAGuB,IAAS,IAAKxB,GAAG,CAACe,IAAI,CAAC,YAAY,EAAES,IAAI,CAAC;EACnDC,MAAM,EAAEA,CAACF,EAAU,EAAEC,IAAS,KAAKxB,GAAG,CAAC0B,GAAG,CAAC,cAAcH,EAAE,EAAE,EAAEC,IAAI,CAAC;EACpEG,MAAM,EAAGJ,EAAU,IAAKvB,GAAG,CAAC2B,MAAM,CAAC,cAAcJ,EAAE,EAAE;AACvD,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBT,MAAM,EAAGC,MAAgE,IACvEpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,EAAE;IAAED;EAAO,CAAC,CAAC;EAC/BE,OAAO,EAAGC,EAAU,IAAKvB,GAAG,CAACqB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EAChDtB,MAAM,EAAGuB,IAAS,IAAKxB,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAES,IAAI,CAAC;EAC/CC,MAAM,EAAEA,CAACF,EAAU,EAAEC,IAAS,KAAKxB,GAAG,CAAC0B,GAAG,CAAC,UAAUH,EAAE,EAAE,EAAEC,IAAI,CAAC;EAChEG,MAAM,EAAGJ,EAAU,IAAKvB,GAAG,CAAC2B,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;EAClDM,UAAU,EAAEA,CAACN,EAAU,EAAEO,OAAe,KACtC9B,GAAG,CAACe,IAAI,CAAC,UAAUQ,EAAE,WAAW,EAAE;IAAEO;EAAQ,CAAC,CAAC;EAChDC,cAAc,EAAEA,CAACR,EAAU,EAAES,QAAgB,KAC3ChC,GAAG,CAACiC,KAAK,CAAC,UAAUV,EAAE,WAAW,EAAE;IAAES;EAAS,CAAC;AACnD,CAAC;AAED,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}