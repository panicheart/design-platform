{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  tasks: [],\n  currentTask: null,\n  loading: false,\n  error: null\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setTasks: (state, action) => {\n      state.tasks = action.payload;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action) => {\n      const index = state.tasks.findIndex(t => t.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(t => t.id !== action.payload);\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setCurrentTask: (state, action) => {\n      state.currentTask = action.payload;\n    },\n    addComment: (state, action) => {\n      const task = state.tasks.find(t => t.id === action.payload.taskId);\n      if (task) {\n        task.comments.push(action.payload.comment);\n      }\n    },\n    updateProgress: (state, action) => {\n      const task = state.tasks.find(t => t.id === action.payload.taskId);\n      if (task) {\n        task.progress = action.payload.progress;\n      }\n    }\n  }\n});\nexport const {\n  setTasks,\n  addTask,\n  updateTask,\n  deleteTask,\n  setLoading,\n  setError,\n  setCurrentTask,\n  addComment,\n  updateProgress\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","currentTask","loading","error","taskSlice","name","reducers","setTasks","state","action","payload","addTask","push","updateTask","index","findIndex","t","id","deleteTask","filter","setLoading","setError","setCurrentTask","addComment","task","find","taskId","comments","comment","updateProgress","progress","actions","reducer"],"sources":["/Users/tancong/Code/department-platform/frontend/src/store/slices/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface Comment {\n  user: {\n    _id: string;\n    username: string;\n    email: string;\n  };\n  content: string;\n  timestamp: string;\n}\n\ninterface Task {\n  id: string;\n  title: string;\n  status: 'completed' | 'in-progress' | 'pending';\n  startDate: string;\n  endDate: string;\n  progress?: number;\n  description?: string;\n}\n\ninterface TaskState {\n  tasks: Task[];\n  currentTask: Task | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: TaskState = {\n  tasks: [],\n  currentTask: null,\n  loading: false,\n  error: null,\n};\n\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setTasks: (state, action: PayloadAction<Task[]>) => {\n      state.tasks = action.payload;\n    },\n    addTask: (state, action: PayloadAction<Task>) => {\n      state.tasks.push(action.payload);\n    },\n    updateTask: (state, action: PayloadAction<Task>) => {\n      const index = state.tasks.findIndex(t => t.id === action.payload.id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n    },\n    deleteTask: (state, action: PayloadAction<string>) => {\n      state.tasks = state.tasks.filter(t => t.id !== action.payload);\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action: PayloadAction<string | null>) => {\n      state.error = action.payload;\n    },\n    setCurrentTask: (state, action: PayloadAction<Task>) => {\n      state.currentTask = action.payload;\n    },\n    addComment: (state, action: PayloadAction<{ taskId: string; comment: Comment }>) => {\n      const task = state.tasks.find(t => t.id === action.payload.taskId);\n      if (task) {\n        task.comments.push(action.payload.comment);\n      }\n    },\n    updateProgress: (state, action: PayloadAction<{ taskId: string; progress: number }>) => {\n      const task = state.tasks.find(t => t.id === action.payload.taskId);\n      if (task) {\n        task.progress = action.payload.progress;\n      }\n    },\n  },\n});\n\nexport const {\n  setTasks,\n  addTask,\n  updateTask,\n  deleteTask,\n  setLoading,\n  setError,\n  setCurrentTask,\n  addComment,\n  updateProgress,\n} = taskSlice.actions;\n\nexport default taskSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AA6B7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAA2B,KAAK;MAC/CD,KAAK,CAACR,KAAK,CAACY,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAA2B,KAAK;MAClD,MAAMK,KAAK,GAAGN,KAAK,CAACR,KAAK,CAACe,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACO,EAAE,CAAC;MACpE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACR,KAAK,CAACc,KAAK,CAAC,GAAGL,MAAM,CAACC,OAAO;MACrC;IACF,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACmB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAAC;IAChE,CAAC;IACDU,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDW,QAAQ,EAAEA,CAACb,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDY,cAAc,EAAEA,CAACd,KAAK,EAAEC,MAA2B,KAAK;MACtDD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACpC,CAAC;IACDa,UAAU,EAAEA,CAACf,KAAK,EAAEC,MAA2D,KAAK;MAClF,MAAMe,IAAI,GAAGhB,KAAK,CAACR,KAAK,CAACyB,IAAI,CAACT,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACgB,MAAM,CAAC;MAClE,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACG,QAAQ,CAACf,IAAI,CAACH,MAAM,CAACC,OAAO,CAACkB,OAAO,CAAC;MAC5C;IACF,CAAC;IACDC,cAAc,EAAEA,CAACrB,KAAK,EAAEC,MAA2D,KAAK;MACtF,MAAMe,IAAI,GAAGhB,KAAK,CAACR,KAAK,CAACyB,IAAI,CAACT,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAACgB,MAAM,CAAC;MAClE,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACM,QAAQ,GAAGrB,MAAM,CAACC,OAAO,CAACoB,QAAQ;MACzC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXvB,QAAQ;EACRI,OAAO;EACPE,UAAU;EACVK,UAAU;EACVE,UAAU;EACVC,QAAQ;EACRC,cAAc;EACdC,UAAU;EACVM;AACF,CAAC,GAAGzB,SAAS,CAAC2B,OAAO;AAErB,eAAe3B,SAAS,CAAC4B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}