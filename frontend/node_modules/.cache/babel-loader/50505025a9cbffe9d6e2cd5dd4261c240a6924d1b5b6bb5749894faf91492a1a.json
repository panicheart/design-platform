{"ast":null,"code":"var _jsxFileName = \"/Users/tancong/Code/frontend/src/pages/DevelopmentPlatform/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Tabs, Tab, Card, CardContent, CardActions, Button, Chip, LinearProgress, IconButton, Menu, MenuItem } from '@mui/material';\nimport { Add as AddIcon, MoreVert as MoreVertIcon, Assignment as TaskIcon, BugReport as BugIcon, Code as CodeIcon, Build as BuildIcon, Science as ScienceIcon, Handshake as HandshakeIcon } from '@mui/icons-material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { taskAPI } from '../../services/api';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport { fetchTasksStart, fetchTasksSuccess, fetchTasksFailure } from '../../store/slices/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `task-tabpanel-${index}`,\n    \"aria-labelledby\": `task-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = TabPanel;\nconst DevelopmentPlatform = () => {\n  _s();\n  const [tabValue, setTabValue] = useState(0);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    tasks,\n    loading\n  } = useSelector(state => state.tasks);\n  const {\n    t\n  } = useLanguage();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      dispatch(fetchTasksStart());\n      try {\n        const response = await taskAPI.getAll();\n        dispatch(fetchTasksSuccess(response.data));\n      } catch (error) {\n        dispatch(fetchTasksFailure('Failed to fetch tasks'));\n      }\n    };\n    fetchTasks();\n  }, [dispatch]);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleMenuClick = (event, taskId) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n  const getTaskIcon = type => {\n    switch (type) {\n      case 'new_product':\n        return /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }, this);\n      case 'model_development':\n        return /*#__PURE__*/_jsxDEV(ScienceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }, this);\n      case 'circuit_verification':\n        return /*#__PURE__*/_jsxDEV(CodeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this);\n      case 'issue_handling':\n        return /*#__PURE__*/_jsxDEV(BugIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 16\n        }, this);\n      case 'testing':\n        return /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }, this);\n      case 'technical_cooperation':\n        return /*#__PURE__*/_jsxDEV(HandshakeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getTaskTypeLabel = type => {\n    return t(type);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: t('developmentPlatform')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 22\n        }, this),\n        onClick: () => {/* TODO: Implement new task creation */},\n        children: t('newTask')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        variant: \"scrollable\",\n        scrollButtons: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: t('allTasks')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('newProduct')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('modelDevelopment')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('circuitVerification')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('issueHandling')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('testing')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('technicalCooperation')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: {\n              xs: '1fr',\n              sm: '1fr 1fr',\n              md: '1fr 1fr 1fr'\n            },\n            gap: 3\n          },\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'flex-start'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1\n                    },\n                    children: [getTaskIcon(task.type), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"div\",\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => handleMenuClick(e, task._id),\n                    children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    label: getTaskTypeLabel(task.type),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: t(`status.${task.status}`),\n                    size: \"small\",\n                    color: task.status === 'completed' ? 'success' : task.status === 'in_progress' ? 'primary' : 'default'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: t('progress')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                    variant: \"determinate\",\n                    value: task.progress,\n                    sx: {\n                      mt: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    sx: {\n                      mt: 1\n                    },\n                    children: [task.progress, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  children: t('viewDetails')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  children: t('updateProgress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchorEl,\n      open: Boolean(menuAnchorEl),\n      onClose: handleMenuClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleMenuClose,\n        children: t('edit')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleMenuClose,\n        children: t('assign')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleMenuClose,\n        sx: {\n          color: 'error.main'\n        },\n        children: t('delete')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(DevelopmentPlatform, \"Qes/BG04riCaPeCVwXUJKGwjqd4=\", false, function () {\n  return [useDispatch, useSelector, useLanguage];\n});\n_c2 = DevelopmentPlatform;\nexport default DevelopmentPlatform;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"DevelopmentPlatform\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Tabs","Tab","Card","CardContent","CardActions","Button","Chip","LinearProgress","IconButton","Menu","MenuItem","Add","AddIcon","MoreVert","MoreVertIcon","Assignment","TaskIcon","BugReport","BugIcon","Code","CodeIcon","Build","BuildIcon","Science","ScienceIcon","Handshake","HandshakeIcon","useSelector","useDispatch","taskAPI","useLanguage","fetchTasksStart","fetchTasksSuccess","fetchTasksFailure","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","DevelopmentPlatform","_s","tabValue","setTabValue","menuAnchorEl","setMenuAnchorEl","dispatch","tasks","loading","state","t","fetchTasks","response","getAll","data","error","handleTabChange","event","newValue","handleMenuClick","taskId","currentTarget","handleMenuClose","getTaskIcon","type","getTaskTypeLabel","display","justifyContent","alignItems","mb","variant","component","startIcon","onClick","width","onChange","indicatorColor","textColor","scrollButtons","label","gridTemplateColumns","xs","sm","md","gap","map","task","title","size","e","_id","color","mt","description","mr","status","progress","anchorEl","open","Boolean","onClose","_c2","$RefreshReg$"],"sources":["/Users/tancong/Code/frontend/src/pages/DevelopmentPlatform/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n  LinearProgress,\n  IconButton,\n  Menu,\n  MenuItem,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  MoreVert as MoreVertIcon,\n  Assignment as TaskIcon,\n  BugReport as BugIcon,\n  Code as CodeIcon,\n  Build as BuildIcon,\n  Science as ScienceIcon,\n  Handshake as HandshakeIcon,\n} from '@mui/icons-material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../store';\nimport { taskAPI } from '../../services/api';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport {\n  fetchTasksStart,\n  fetchTasksSuccess,\n  fetchTasksFailure,\n} from '../../store/slices/taskSlice';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`task-tabpanel-${index}`}\n      aria-labelledby={`task-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n};\n\nconst DevelopmentPlatform: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [menuAnchorEl, setMenuAnchorEl] = useState<null | HTMLElement>(null);\n  const dispatch = useDispatch();\n  const { tasks, loading } = useSelector((state: RootState) => state.tasks);\n  const { t } = useLanguage();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      dispatch(fetchTasksStart());\n      try {\n        const response = await taskAPI.getAll();\n        dispatch(fetchTasksSuccess(response.data));\n      } catch (error) {\n        dispatch(fetchTasksFailure('Failed to fetch tasks'));\n      }\n    };\n\n    fetchTasks();\n  }, [dispatch]);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLElement>, taskId: string) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const getTaskIcon = (type: string) => {\n    switch (type) {\n      case 'new_product':\n        return <BuildIcon />;\n      case 'model_development':\n        return <ScienceIcon />;\n      case 'circuit_verification':\n        return <CodeIcon />;\n      case 'issue_handling':\n        return <BugIcon />;\n      case 'testing':\n        return <TaskIcon />;\n      case 'technical_cooperation':\n        return <HandshakeIcon />;\n      default:\n        return <TaskIcon />;\n    }\n  };\n\n  const getTaskTypeLabel = (type: string) => {\n    return t(type);\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          {t('developmentPlatform')}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => {/* TODO: Implement new task creation */}}\n        >\n          {t('newTask')}\n        </Button>\n      </Box>\n\n      <Paper sx={{ width: '100%' }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab label={t('allTasks')} />\n          <Tab label={t('newProduct')} />\n          <Tab label={t('modelDevelopment')} />\n          <Tab label={t('circuitVerification')} />\n          <Tab label={t('issueHandling')} />\n          <Tab label={t('testing')} />\n          <Tab label={t('technicalCooperation')} />\n        </Tabs>\n\n        {loading ? (\n          <LinearProgress />\n        ) : (\n          <TabPanel value={tabValue} index={0}>\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr' }, gap: 3 }}>\n              {tasks.map((task) => (\n                <Box key={task._id}>\n                  <Card>\n                    <CardContent>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          {getTaskIcon(task.type)}\n                          <Typography variant=\"h6\" component=\"div\">\n                            {task.title}\n                          </Typography>\n                        </Box>\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => handleMenuClick(e, task._id)}\n                        >\n                          <MoreVertIcon />\n                        </IconButton>\n                      </Box>\n                      <Typography color=\"text.secondary\" sx={{ mt: 1 }}>\n                        {task.description}\n                      </Typography>\n                      <Box sx={{ mt: 2 }}>\n                        <Chip\n                          label={getTaskTypeLabel(task.type)}\n                          size=\"small\"\n                          sx={{ mr: 1 }}\n                        />\n                        <Chip\n                          label={t(`status.${task.status}`)}\n                          size=\"small\"\n                          color={\n                            task.status === 'completed'\n                              ? 'success'\n                              : task.status === 'in_progress'\n                              ? 'primary'\n                              : 'default'\n                          }\n                        />\n                      </Box>\n                      <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {t('progress')}\n                        </Typography>\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={task.progress}\n                          sx={{ mt: 1 }}\n                        />\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                          {task.progress}%\n                        </Typography>\n                      </Box>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\">{t('viewDetails')}</Button>\n                      <Button size=\"small\">{t('updateProgress')}</Button>\n                    </CardActions>\n                  </Card>\n                </Box>\n              ))}\n            </Box>\n          </TabPanel>\n        )}\n      </Paper>\n\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>{t('edit')}</MenuItem>\n        <MenuItem onClick={handleMenuClose}>{t('assign')}</MenuItem>\n        <MenuItem onClick={handleMenuClose} sx={{ color: 'error.main' }}>\n          {t('delete')}\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default DevelopmentPlatform; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}