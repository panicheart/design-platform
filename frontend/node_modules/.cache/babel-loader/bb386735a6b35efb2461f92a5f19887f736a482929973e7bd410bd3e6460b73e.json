{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  resources: [],\n  currentResource: null,\n  loading: false,\n  error: null\n};\nconst resourceSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    fetchResourcesStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchResourcesSuccess: (state, action) => {\n      state.loading = false;\n      state.resources = action.payload;\n    },\n    fetchResourcesFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setCurrentResource: (state, action) => {\n      state.currentResource = action.payload;\n    },\n    addResource: (state, action) => {\n      state.resources.push(action.payload);\n    },\n    updateResource: (state, action) => {\n      const index = state.resources.findIndex(r => r._id === action.payload._id);\n      if (index !== -1) {\n        state.resources[index] = action.payload;\n      }\n    },\n    deleteResource: (state, action) => {\n      state.resources = state.resources.filter(r => r._id !== action.payload);\n    }\n  }\n});\nexport const {\n  fetchResourcesStart,\n  fetchResourcesSuccess,\n  fetchResourcesFailure,\n  setCurrentResource,\n  addResource,\n  updateResource,\n  deleteResource\n} = resourceSlice.actions;\nexport default resourceSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","resources","currentResource","loading","error","resourceSlice","name","reducers","fetchResourcesStart","state","fetchResourcesSuccess","action","payload","fetchResourcesFailure","setCurrentResource","addResource","push","updateResource","index","findIndex","r","_id","deleteResource","filter","actions","reducer"],"sources":["/Users/tancong/Code/department-platform/frontend/src/store/slices/resourceSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Resource {\n  _id: string;\n  type: 'human' | 'time' | 'material' | 'component' | 'product' | 'knowledge';\n  title: string;\n  description: string;\n  content: any;\n  createdBy: {\n    _id: string;\n    username: string;\n    email: string;\n  };\n  updatedBy: {\n    _id: string;\n    username: string;\n    email: string;\n  };\n  status: 'draft' | 'pending' | 'approved' | 'rejected';\n  visibility: 'public' | 'private' | 'department';\n  tags: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface ResourceState {\n  resources: Resource[];\n  currentResource: Resource | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ResourceState = {\n  resources: [],\n  currentResource: null,\n  loading: false,\n  error: null,\n};\n\nconst resourceSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    fetchResourcesStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchResourcesSuccess: (state, action: PayloadAction<Resource[]>) => {\n      state.loading = false;\n      state.resources = action.payload;\n    },\n    fetchResourcesFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setCurrentResource: (state, action: PayloadAction<Resource>) => {\n      state.currentResource = action.payload;\n    },\n    addResource: (state, action: PayloadAction<Resource>) => {\n      state.resources.push(action.payload);\n    },\n    updateResource: (state, action: PayloadAction<Resource>) => {\n      const index = state.resources.findIndex(r => r._id === action.payload._id);\n      if (index !== -1) {\n        state.resources[index] = action.payload;\n      }\n    },\n    deleteResource: (state, action: PayloadAction<string>) => {\n      state.resources = state.resources.filter(r => r._id !== action.payload);\n    },\n  },\n});\n\nexport const {\n  fetchResourcesStart,\n  fetchResourcesSuccess,\n  fetchResourcesFailure,\n  setCurrentResource,\n  addResource,\n  updateResource,\n  deleteResource,\n} = resourceSlice.actions;\n\nexport default resourceSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAgC7D,MAAMC,YAA2B,GAAG;EAClCC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,WAAW;EACjBN,YAAY;EACZO,QAAQ,EAAE;IACRC,mBAAmB,EAAGC,KAAK,IAAK;MAC9BA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,qBAAqB,EAAEA,CAACD,KAAK,EAAEE,MAAiC,KAAK;MACnEF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACR,SAAS,GAAGU,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,qBAAqB,EAAEA,CAACJ,KAAK,EAAEE,MAA6B,KAAK;MAC/DF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,kBAAkB,EAAEA,CAACL,KAAK,EAAEE,MAA+B,KAAK;MAC9DF,KAAK,CAACP,eAAe,GAAGS,MAAM,CAACC,OAAO;IACxC,CAAC;IACDG,WAAW,EAAEA,CAACN,KAAK,EAAEE,MAA+B,KAAK;MACvDF,KAAK,CAACR,SAAS,CAACe,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IACtC,CAAC;IACDK,cAAc,EAAEA,CAACR,KAAK,EAAEE,MAA+B,KAAK;MAC1D,MAAMO,KAAK,GAAGT,KAAK,CAACR,SAAS,CAACkB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKV,MAAM,CAACC,OAAO,CAACS,GAAG,CAAC;MAC1E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBT,KAAK,CAACR,SAAS,CAACiB,KAAK,CAAC,GAAGP,MAAM,CAACC,OAAO;MACzC;IACF,CAAC;IACDU,cAAc,EAAEA,CAACb,KAAK,EAAEE,MAA6B,KAAK;MACxDF,KAAK,CAACR,SAAS,GAAGQ,KAAK,CAACR,SAAS,CAACsB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKV,MAAM,CAACC,OAAO,CAAC;IACzE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,mBAAmB;EACnBE,qBAAqB;EACrBG,qBAAqB;EACrBC,kBAAkB;EAClBC,WAAW;EACXE,cAAc;EACdK;AACF,CAAC,GAAGjB,aAAa,CAACmB,OAAO;AAEzB,eAAenB,aAAa,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}