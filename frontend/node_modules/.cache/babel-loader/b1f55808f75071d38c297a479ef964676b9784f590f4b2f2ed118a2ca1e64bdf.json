{"ast":null,"code":"var _jsxFileName = \"/Users/tancong/Code/department-platform/frontend/src/components/TaskProgress.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Card, CardContent, Typography, LinearProgress, Grid, Chip, CircularProgress } from '@mui/material';\nimport { CheckCircle, Schedule, Pending } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskProgress = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('/api/task-list');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        setTasks(data.tasks);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch tasks');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'in-progress':\n        return 'primary';\n      case 'pending':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n      case 'in-progress':\n        return /*#__PURE__*/_jsxDEV(Schedule, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this);\n      case 'pending':\n        return /*#__PURE__*/_jsxDEV(Pending, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u4EFB\\u52A1\\u8FDB\\u5EA6\\u8FFD\\u8E2A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: {\n            xs: '100%',\n            md: '50%'\n          },\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                icon: getStatusIcon(task.status) || undefined,\n                label: task.status === 'in-progress' ? '进行中' : task.status === 'completed' ? '已完成' : '待开始',\n                color: getStatusColor(task.status),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: [\"\\u5F00\\u59CB\\u65E5\\u671F: \", task.startDate, \" | \\u9884\\u8BA1\\u5B8C\\u6210: \", task.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), task.description && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              sx: {\n                mb: 2\n              },\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), task.status === 'in-progress' && task.progress !== undefined && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: task.progress,\n                sx: {\n                  height: 8,\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                sx: {\n                  mt: 1\n                },\n                children: [\"\\u5B8C\\u6210\\u8FDB\\u5EA6: \", task.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProgress, \"qwRs5Xd4E7WtXCZK9zh6nomhOw4=\");\n_c = TaskProgress;\nexport default TaskProgress;\nvar _c;\n$RefreshReg$(_c, \"TaskProgress\");","map":{"version":3,"names":["React","useEffect","useState","Box","Card","CardContent","Typography","LinearProgress","Grid","Chip","CircularProgress","CheckCircle","Schedule","Pending","jsxDEV","_jsxDEV","TaskProgress","_s","tasks","setTasks","loading","setLoading","error","setError","fetchTasks","response","fetch","ok","Error","data","json","err","message","getStatusColor","status","getStatusIcon","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","justifyContent","alignItems","height","children","p","color","variant","gutterBottom","container","spacing","map","task","width","xs","md","mb","title","icon","undefined","label","size","startDate","endDate","description","progress","mt","value","borderRadius","id","_c","$RefreshReg$"],"sources":["/Users/tancong/Code/department-platform/frontend/src/components/TaskProgress.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  LinearProgress,\n  Grid,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\nimport { CheckCircle, Schedule, Pending } from '@mui/icons-material';\n\ninterface Task {\n  id: string;\n  title: string;\n  status: 'completed' | 'in-progress' | 'pending';\n  startDate: string;\n  endDate: string;\n  progress?: number;\n  description?: string;\n}\n\nconst TaskProgress: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('/api/task-list');\n        if (!response.ok) {\n          throw new Error('Failed to fetch tasks');\n        }\n        const data = await response.json();\n        setTasks(data.tasks);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch tasks');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'in-progress':\n        return 'primary';\n      case 'pending':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle />;\n      case 'in-progress':\n        return <Schedule />;\n      case 'pending':\n        return <Pending />;\n      default:\n        return null;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        任务进度追踪\n      </Typography>\n      <Grid container spacing={3}>\n        {tasks.map((task) => (\n          <Box\n            key={task.id}\n            sx={{\n              width: { xs: '100%', md: '50%' },\n              p: 1\n            }}\n          >\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                  <Typography variant=\"h6\">{task.title}</Typography>\n                  <Chip\n                    icon={getStatusIcon(task.status) || undefined}\n                    label={task.status === 'in-progress' ? '进行中' : task.status === 'completed' ? '已完成' : '待开始'}\n                    color={getStatusColor(task.status) as 'success' | 'primary' | 'warning' | 'default'}\n                    size=\"small\"\n                  />\n                </Box>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  开始日期: {task.startDate} | 预计完成: {task.endDate}\n                </Typography>\n                {task.description && (\n                  <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 2 }}>\n                    {task.description}\n                  </Typography>\n                )}\n                {task.status === 'in-progress' && task.progress !== undefined && (\n                  <Box sx={{ mt: 2 }}>\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={task.progress}\n                      sx={{ height: 8, borderRadius: 4 }}\n                    />\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 1 }}>\n                      完成进度: {task.progress}%\n                    </Typography>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Box>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TaskProgress; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}